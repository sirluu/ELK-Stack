version: '2.2'
services:
  elk-coordinating02:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: elk-coordinating02
    volumes:
      - ./elasticsearch-elk-coordinating02.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ${ES_DATA}:/usr/share/elasticsearch/data:rw
      - ${ES_LOGS}:/usr/share/elasticsearch/logs:rw
      - ${PATH_REPO}:/usr/share/elasticsearch/snapshots:rw
      - ${CERTS_DIR}:/usr/share/elasticsearch/config/certs:ro
    ports:
      - ${ES_PORT}:${ES_PORT}
      - ${ES_TRANSPORT_PORT}:${ES_TRANSPORT_PORT}
    environment:
      - cluster.name=${CLUSTER_NAME}
      - ELASTIC_PASSWORD=${PASS_ELASTIC}
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xmx2g -Xms2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    network_mode: "host"
  elk-logstash02:
    image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
    container_name: elk-logstash02
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ${CERTS_DIR}:/usr/share/logstash/certs:ro
    ports:
      - "${LOGSTASH_PORT}:${LOGSTASH_PORT}/tcp"
      - "${LOGSTASH_PORT}:${LOGSTASH_PORT}/udp"
    environment:
      - LS_JAVA_OPTS=-Xmx256m -Xms256m
    network_mode: "host"

  elk-kibana02:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    container_name: elk-kibana02
    volumes:
      - ./elk-kibana02.yml:/usr/share/kibana/config/kibana.yml:ro
      - ${KIBANA_DIR}:/usr/share/kibana/data:rw
      - ${CERTS_DIR}:/usr/share/kibana/config/certs:ro
    environment:
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${PASS_KIBANA}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    ports:
      - "${KIBANA_PORT}:${KIBANA_PORT}"
    network_mode: "host"
  keepalived-haproxy02:
    image: pelin/haproxy-keepalived:v1.0.0
    container_name: keepalived-haproxy02
    volumes:
      - ./keepalived-haproxy/keepalived/:/etc/keepalived/
      - ./keepalived-haproxy/haproxy/:/usr/local/etc/haproxy/
      - ${CERTS_DIR}:/etc/ssl/:ro
    restart: always
    network_mode: "host"
    privileged: true